import{AnimationClip as e,AnimationMixer as t,Matrix4 as o,Quaternion as r,QuaternionKeyframeTrack as n,SkeletonHelper as i,Vector3 as s,VectorKeyframeTrack as a}from"three";function retarget(e,t,n={}){let i=new s,a=new r,l=new s,p=new o,u=new o,m=new o;n.preserveMatrix=void 0===n.preserveMatrix||n.preserveMatrix,n.preservePosition=void 0===n.preservePosition||n.preservePosition,n.preserveHipPosition=void 0!==n.preserveHipPosition&&n.preserveHipPosition,n.useTargetMatrix=void 0!==n.useTargetMatrix&&n.useTargetMatrix,n.hip=void 0!==n.hip?n.hip:"hip",n.names=n.names||{};let d=t.isObject3D?t.skeleton.bones:getBones(t),c=e.isObject3D?e.skeleton.bones:getBones(e),x,f,$,v,g;if(e.isObject3D?e.skeleton.pose():(n.useTargetMatrix=!0,n.preserveMatrix=!1),n.preservePosition){g=[];for(let h=0;h<c.length;h++)g.push(c[h].position.clone())}if(n.preserveMatrix){e.updateMatrixWorld(),e.matrixWorld.identity();for(let M=0;M<e.children.length;++M)e.children[M].updateMatrixWorld(!0)}if(n.offsets){x=[];for(let y=0;y<c.length;++y)f=c[y],$=n.names[f.name]||f.name,n.offsets[$]&&(f.matrix.multiply(n.offsets[$]),f.matrix.decompose(f.position,f.quaternion,f.scale),f.updateMatrixWorld()),x.push(f.matrixWorld.clone())}for(let b=0;b<c.length;++b){if(f=c[b],v=getBoneByName($=n.names[f.name]||f.name,d),m.copy(f.matrixWorld),v){if(v.updateMatrixWorld(),n.useTargetMatrix?u.copy(v.matrixWorld):(u.copy(e.matrixWorld).invert(),u.multiply(v.matrixWorld)),l.setFromMatrixScale(u),u.scale(l.set(1/l.x,1/l.y,1/l.z)),m.makeRotationFromQuaternion(a.setFromRotationMatrix(u)),e.isObject3D){let k=c.indexOf(f),w=x?x[k]:p.copy(e.skeleton.boneInverses[k]).invert();m.multiply(w)}m.copyPosition(u)}f.parent&&f.parent.isBone?(f.matrix.copy(f.parent.matrixWorld).invert(),f.matrix.multiply(m)):f.matrix.copy(m),n.preserveHipPosition&&$===n.hip&&f.matrix.setPosition(i.set(0,f.position.y,0)),f.matrix.decompose(f.position,f.quaternion,f.scale),f.updateMatrixWorld()}if(n.preservePosition)for(let P=0;P<c.length;++P)f=c[P],($=n.names[f.name]||f.name)!==n.hip&&f.position.copy(g[P]);n.preserveMatrix&&e.updateMatrixWorld(!0)}function retargetClip(o,r,i,s={}){s.useFirstFramePosition=void 0!==s.useFirstFramePosition&&s.useFirstFramePosition,s.fps=void 0!==s.fps?s.fps:Math.max(...i.tracks.map(e=>e.times.length))/i.duration,s.names=s.names||[],r.isObject3D||(r=getHelperFromSkeleton(r));let l=Math.round(i.duration*(s.fps/1e3)*1e3),p=i.duration/(l-1),u=[],m=new t(r),d=getBones(o.skeleton),c=[],x,f,$,v,g;m.clipAction(i).play(),m.update(0),r.updateMatrixWorld();for(let h=0;h<l;++h){let M=h*p;retarget(o,r,s);for(let y=0;y<d.length;++y)($=getBoneByName(g=s.names[d[y].name]||d[y].name,r.skeleton))&&(f=d[y],v=c[y]=c[y]||{bone:f},s.hip===g&&(v.pos||(v.pos={times:new Float32Array(l),values:new Float32Array(3*l)}),s.useFirstFramePosition&&(0===h&&(x=f.position.clone()),f.position.sub(x)),v.pos.times[h]=M,f.position.toArray(v.pos.values,3*h)),v.quat||(v.quat={times:new Float32Array(l),values:new Float32Array(4*l)}),v.quat.times[h]=M,f.quaternion.toArray(v.quat.values,4*h));h===l-2?m.update(p-1e-7):m.update(p),r.updateMatrixWorld()}for(let b=0;b<c.length;++b)(v=c[b])&&(v.pos&&u.push(new a(".bones["+v.bone.name+"].position",v.pos.times,v.pos.values)),u.push(new n(".bones["+v.bone.name+"].quaternion",v.quat.times,v.quat.values)));return m.uncacheAction(i),new e(i.name,-1,u)}function clone(e){let t=new Map,o=new Map,r=e.clone();return parallelTraverse(e,r,function(e,r){t.set(r,e),o.set(e,r)}),r.traverse(function(e){if(!e.isSkinnedMesh)return;let r=e,n=t.get(e),i=n.skeleton.bones;r.skeleton=n.skeleton.clone(),r.bindMatrix.copy(n.bindMatrix),r.skeleton.bones=i.map(function(e){return o.get(e)}),r.bind(r.skeleton,r.bindMatrix)}),r}function getBoneByName(e,t){for(let o=0,r=getBones(t);o<r.length;o++)if(e===r[o].name)return r[o]}function getBones(e){return Array.isArray(e)?e:e.bones}function getHelperFromSkeleton(e){let t=new i(e.bones[0]);return t.skeleton=e,t}function parallelTraverse(e,t,o){o(e,t);for(let r=0;r<e.children.length;r++)parallelTraverse(e.children[r],t.children[r],o)}export{retarget,retargetClip,clone};